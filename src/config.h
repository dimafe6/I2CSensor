#ifndef __CONFIG_H__
#define __CONFIG_H__

//#define DEBUG

/** Select one **/
#define HARDWARE_VERSION_V3 // Version with TPL5111 timer
//#define HARDWARE_VERSION_V4 // Version with e-ink display
/** /Select one **/

#ifdef HARDWARE_VERSION_V3
#define TPL_DONE_PIN A0
#endif

#ifdef HARDWARE_VERSION_V4
#define ENABLE_DISPLAY

/** Select one **/
//#define DISPLAY_MODE_FULL_REDRAW
#define DISPLAY_MODE_PARTIAL_REDRAW
/** /Select one **/

#define FULL_REDRAW_AFTER_UPDATES 50
#define DISPLAY_ROTATION 0

#ifdef ENABLE_DISPLAY

#ifdef DISPLAY_MODE_PARTIAL_REDRAW
#undef DISPLAY_MODE_FULL_REDRAW
#endif

#ifdef DISPLAY_MODE_FULL_REDRAW
#undef DISPLAY_MODE_PARTIAL_REDRAW
#endif

#include <GxEPD2_BW.h>
#include "Dseg7ClassicBold64.h"
#include "FreeMonoBoldUpper9Pt7b.h"
#include "percentFont.h"

#define DISPLAY_CS 7
#define DISPLAY_DC 8
#define DISPLAY_RST 6
#define DISPLAY_BUSY 3

#define GxEPD2_DISPLAY_CLASS GxEPD2_BW

#define GxEPD2_DRIVER_CLASS GxEPD2_154_D67

#ifndef EPD_CS
#define EPD_CS DISPLAY_CS
#endif

#define MAX_DISPLAY_BUFFER_SIZE 1000
#define MAX_HEIGHT(EPD) (EPD::HEIGHT <= MAX_DISPLAY_BUFFER_SIZE / (EPD::WIDTH / 8) ? EPD::HEIGHT : MAX_DISPLAY_BUFFER_SIZE / (EPD::WIDTH / 8))
GxEPD2_DISPLAY_CLASS<GxEPD2_DRIVER_CLASS, MAX_HEIGHT(GxEPD2_DRIVER_CLASS)> display(GxEPD2_DRIVER_CLASS(DISPLAY_CS, DISPLAY_DC, DISPLAY_RST, DISPLAY_BUSY));
#endif
#endif

#define EEPROM_NODE_ADDRESS 0
#define EEPROM_CHANNEL_ADDRESS 1
#define EEPROM_SPEED_ADDRESS 2
#define EEPROM_POWER_ADDRESS 3
#define EEPROM_SLEEP_TIME_ADDRESS 4
#define EEPROM_ENABLE_STATUS_LED_ADDRESS 5
#define EEPROM_BME_FILTER_ADDRESS 6
#define EEPROM_BME_TEMP_OVERSAMPLE_ADDRESS 7
#define EEPROM_BME_HUM_OVERSAMPLE_ADDRESS 8

#define PROG_PIN 2
#define RADIO_CE 9
#define RADIO_CSN 10
#define RF_PWR PD5
#define SENSOR_PWR 4
#define CONFIG_LED A1
#define STATUS_LED A2

#define BATTERY_MIN_VOLTAGE 2500
#define BATTERY_MAX_VOLTAGE 3600

#endif